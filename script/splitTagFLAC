#!/bin/bash
#
# splitTagFLAC
# Splits a .flac (or .m4a) album using a .cue file, removes pregap track00,
# and applies metadata using cuetag.sh.
#

set -euo pipefail
shopt -s nullglob

# --- Defaults ---
DIR="."
CUE_FILE=""
AUDIO_FILE=""
TEMP_FLAC=""

# --- Functions ---

print_help() {
  cat <<EOF
üé∂ splitTagFLAC - FLAC/M4A album splitter and tagger

Usage:
  $(basename "$0") [-c cue_file] [-f audio_file] [directory]

Options:
  -c, --cue    Path to the .cue file to use
  -f, --flac   Path to the .flac or .m4a file to split
  -h, --help   Show this help message

Arguments:
  directory    Optional path to directory containing the files (default: current)

Notes:
  - Supports both .flac and .m4a (converts to .flac for splitting)
  - Automatically detects files if exactly one .cue and one .flac/.m4a is present
  - Uses cuetag.sh to apply metadata
EOF
}

# --- Parse arguments ---
while [[ $# -gt 0 ]]; do
  case "$1" in
    -c|--cue)
      CUE_FILE="$2"
      shift 2
      ;;
    -f|--flac)
      AUDIO_FILE="$2"
      shift 2
      ;;
    -h|--help)
      print_help
      exit 0
      ;;
    *)
      if [[ "$DIR" == "." ]]; then
        DIR="$1"
        shift
      else
        echo "‚ùå Unknown argument or multiple directories specified: $1"
        exit 1
      fi
      ;;
  esac
done

# --- Validate directory ---
if [[ ! -d "$DIR" ]]; then
  echo "‚ùå Error: '$DIR' is not a valid directory."
  exit 1
fi

cd "$DIR"

# --- Auto-detect cue file if not provided ---
if [[ -z "$CUE_FILE" ]]; then
  CUES=( *.cue )
  if [[ ${#CUES[@]} -ne 1 ]]; then
    echo "‚ùå Error: Expected exactly one .cue file. Found ${#CUES[@]}."
    exit 1
  fi
  CUE_FILE="${CUES[0]}"
fi

# --- Auto-detect audio file if not provided ---
if [[ -z "$AUDIO_FILE" ]]; then
  AUDIO_CANDIDATES=( *.flac *.m4a )
  if [[ ${#AUDIO_CANDIDATES[@]} -ne 1 ]]; then
    echo "‚ùå Error: Expected exactly one .flac or .m4a file. Found ${#AUDIO_CANDIDATES[@]}."
    exit 1
  fi
  AUDIO_FILE="${AUDIO_CANDIDATES[0]}"
fi

# --- Convert .m4a to .flac if needed ---
EXT="${AUDIO_FILE##*.}"
EXT_LOWER=$(echo "$EXT" | tr '[:upper:]' '[:lower:]')

if [[ "$EXT_LOWER" == "m4a" ]]; then
  TEMP_FLAC="$(basename "${AUDIO_FILE%.m4a}.converted.flac")"
  echo "üîÅ Converting .m4a to .flac: $TEMP_FLAC"
  ffmpeg -y -i "$AUDIO_FILE" "$TEMP_FLAC"

  # Safety check
  if [[ ! -s "$TEMP_FLAC" ]]; then
    echo "‚ùå Error: Conversion failed ‚Äî resulting FLAC not created or is empty."
    exit 1
  fi

  AUDIO_FILE="$TEMP_FLAC"
fi

echo "üìÅ Directory: $(pwd)"
echo "üéß Audio:     $AUDIO_FILE"
echo "üìÑ CUE:       $CUE_FILE"

# --- Split ---
echo "üî™ Splitting..."
shnsplit -f "$CUE_FILE" -t "%n - %t" -o flac "$AUDIO_FILE"

# --- Remove pregap if it exists ---
if [[ -f split-track00.flac ]]; then
  echo "üóëÔ∏è  Removing pregap: split-track00.flac"
  rm split-track00.flac
fi

# --- Tag files ---
if ! command -v cuetag.sh >/dev/null; then
  echo "‚ùå Error: cuetag.sh not found in PATH"
  exit 2
fi

echo "üè∑Ô∏è  Applying tags..."

mapfile -t FLAC_TRACKS < <(find . -maxdepth 1 -type f -name "*.flac" ! -name "$AUDIO_FILE" -print0 | sort -zV | xargs -0 -n1)

TRACK_COUNT=$(grep -c '^ *TRACK' "$CUE_FILE")
FILE_COUNT=${#FLAC_TRACKS[@]}

if [[ "$TRACK_COUNT" -ne "$FILE_COUNT" ]]; then
  echo "‚ö†Ô∏è  Warning: Cue sheet has $TRACK_COUNT tracks, but found $FILE_COUNT split FLAC files."
fi

cuetag.sh "$CUE_FILE" "${FLAC_TRACKS[@]}"

echo "‚úÖ Done. Tracks split and tagged in '$DIR'"

# --- Clean up ---
if [[ -n "$TEMP_FLAC" && -f "$TEMP_FLAC" ]]; then
  echo "üßπ Cleaning up converted FLAC: $TEMP_FLAC"
  rm "$TEMP_FLAC"
fi

